#!/bin/ash
# Fatdog Customisable Control Menu
Version=1.0.0
#
# Copyright (C) step, 2016
#
# Some code extracted from fatdog-control-panel.sh
# Copyright (C) James Budiono 2012, 2013
#
# License: GNU GPL Version 3 or later
#
# Require: gtkmenuplus >= 1.1.2 https://github.com/step-/gtkmenuplus
#
#   
# Formats {{{1
# Applets are defined in /etc/control-panel-applets and $HOME/.fatdog/control-panel-applets
# and in files inside /etc/control-panel-applets.dir and $HOME/.fatdog/control-panel-applets.dir
#
# These two files will be sourced when the application starts.
# Anything shell variables that starts with "TABx" will be interpreted as applet definition.
# The must contain TABx="tab-name|applet1 applet2 applet3".
# "x" can be anything (in version 1.0, it has to be a number from 1 to 100). Tabs are sorted with sort -V
#
# if called parameters, it will use the specified control file instead of system defined ones as above
# $1-apptitle, $* - applet definition files
#
#140110 internationalisation by L18L, make use of translated Name and Comment in *.desktop files
#161015 morphed into gtkmenudialog generator by step

### configuration variables {{{1
DESKTOP_FILES_DIRS="/usr/share/applications /usr/local/share/applications $XDG_DATA_HOME/applications"
# Not really used.
ICON_DIRS="/usr/share/pixmaps/" # /usr/share/midi-icons/ /usr/share/mini-icons/ /usr/share/icons/ $XDG_DATA_HOME/icons"
ICON_DISPLAY_SIZE="32" # 32"	# in pixels, width x height

SYSTEM_APPLETS=/etc/control-panel-applets
SYSTEM_APPLETS_DIR=${SYSTEM_APPLETS}.dir
USER_APPLETS=$FATDOG_STATE_DIR/control-panel-applets
USER_APPLETS_DIR=${USER_APPLETS}.dir

### default applets, can be overriden by the applet files
# no default applets
#TAB1="Desktop|wallpaper zarfy fatdog-event-manager"
#TAB2="System|BootManager-configure-bootup fatdog-set-timezone"

### runtime variables 
APPLETS_COUNT=0		# no of applets initialised

make_xp_icon() # {{{1 make a transparent icon
{
  if ! [ "$XPICON" ]; then
    XPICON=/tmp/gmenu2_$USER-fdcp.png
    # xxd -p -g 0 1x1.png 
    echo "89504e470d0a1a0a0000000d494844520000000100000001010300000025
db56ca00000003504c5445000000a77a3dda0000000174524e530040e6d8
660000000a4944415408d76360000000020001e221bc330000000049454e
44ae426082" |
    xxd -r -p - "$XPICON"
  fi
}

init_menu() { # {{{1
	echo "
icondirectory = $ICON_DIRS
iconsize = $ICON_DISPLAY_SIZE # comment out this line for a smaller menu
format = font-size=\"large\"  # comment out this line for a smaller menu
# Don't change below
configure = errorconsoleonly endsubmenu noicons
configure = nolaunchernodisplay nolaunchernullcategory
"
}

load_applets() { # {{{1
	local tab applets tabname a b

	for tab in $(set | grep "^TAB.*=" | sort -V | sed 's/=.*//'); do
		eval applets=\$$tab
		case $applets in "") continue ;; esac

		tabname=${applets%%|*}
		applets=${applets#*|}
		
		echo "submenu = _$tabname"
    [ "$XPICON" ] && echo "icon = $XPICON"

		# add applets to the new
		for a in $applets; do
			for b in $DESKTOP_FILES_DIRS; do
				if [ -e "$b/${a}.desktop" ]; then
					echo "  launcher = $b/${a}.desktop"

					APPLETS_COUNT=$(($APPLETS_COUNT + 1))
				fi
			done
		done

		echo endsubmenu
	done
}

# Main {{{1
### init parameters - this app can be called with parameters, masquerade as launcher, and be embedded in gmenu2
#XPICON=
EMBED=
case "$1" in
  -h|--help) echo "Usage:
  [env XPICON=/path/to/icon.png|NULL] ${0##*/} [--embed] [APPLETS-FILE]" >&2
    exit
    ;;
  --embed) EMBED=1; shift
    ;;
esac

# find applets to load - either from command line or system applet {{{2
if [ "$1" ]; then
	#for a in $(seq 1 100); do eval unset TAB$a; done # clear any default applets
	while [ "$1" ]; do
		[ -e "$1" ] && . "$1"
		shift
	done
else
	[ -e $SYSTEM_APPLETS ] && . $SYSTEM_APPLETS
	[ -e $SYSTEM_APPLETS_DIR ] && 
	for control_file in $SYSTEM_APPLETS_DIR/*; do [ -r $control_file ] && . $control_file; done
	
	[ -e $USER_APPLETS ] && . $USER_APPLETS
	[ -e $USER_APPLETS_DIR ] && 
	for control_file in $USER_APPLETS_DIR/*; do [ -r $control_file ] && . $control_file; done
fi

# Display or embed menu {{{2
# Embedding might need configure= lines as in init_menu().
make_xp_icon
if [ 1 = "$EMBED" ]; then
  load_applets
else
  { init_menu; load_applets; } | gtkmenuplus -
fi
